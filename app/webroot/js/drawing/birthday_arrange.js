// Generated by CoffeeScript 1.3.3
var BirthdayArrange,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BirthdayArrange = (function(_super) {

  __extends(BirthdayArrange, _super);

  function BirthdayArrange() {
    return BirthdayArrange.__super__.constructor.apply(this, arguments);
  }

  BirthdayArrange.prototype.upload = function() {
    var url,
      _this = this;
    url = this.makeUrl();
    return this.setBackgroundImages().then(function() {
      var saveData;
      saveData = _this.getImageData();
      return $.ajax({
        url: url,
        type: "POST",
        data: {
          "img_file": saveData
        },
        success: function(res) {
          alert("save done");
          return location.href = "/mypage";
        }
      });
    });
  };

  BirthdayArrange.prototype.setBackgroundImages = function() {
    var df, img, src,
      _this = this;
    df = $.Deferred();
    src = "/img/card-bg.png";
    img = new Image();
    img.src = src;
    img.onload = function() {
      _this.ctx.drawImage(img, 0, 0, _this.canvas.width, _this.canvas.height);
      return df.resolve();
    };
    return df.promise();
  };

  BirthdayArrange.prototype.setImages = function() {
    var element, imageList, writer, _i, _len;
    imageList = this.getImages();
    writer = "";
    for (_i = 0, _len = imageList.length; _i < _len; _i++) {
      element = imageList[_i];
      writer += "<a onclick='drawing.inImage(\"" + element + "\")' href='#'>画像</a>";
    }
    console.log(writer);
    return $("#imageList").html(writer);
  };

  BirthdayArrange.prototype.getImageData = function() {
    var data, type;
    type = "image/png";
    data = this.canvas.toDataURL(type);
    data = data.replace('data:image/png;base64,', '');
    return data;
  };

  BirthdayArrange.prototype.getImages = function() {
    var collaboratorId, collaboratorList, collaboratorsProfileImages, imageList, planId, url, _i, _len,
      _this = this;
    planId = "";
    $.ajax({
      url: "/get_plan",
      type: "GET",
      async: false,
      dataType: "json",
      success: function(res) {
        return planId = res.Plan.id;
      }
    });
    url = "/get_collaborators/" + planId;
    collaboratorList = [];
    $.ajax({
      url: url,
      type: "GET",
      async: false,
      dataType: "json",
      success: function(res) {
        var element, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = res.length; _i < _len; _i++) {
          element = res[_i];
          _results.push(collaboratorList.push(element.Collaborator.id));
        }
        return _results;
      }
    });
    url = "/get_friends";
    collaboratorsProfileImages = [];
    $.ajax({
      url: url,
      type: "GET",
      async: false,
      dataType: "json",
      success: function(res) {}
    });
    imageList = [];
    for (_i = 0, _len = collaboratorList.length; _i < _len; _i++) {
      collaboratorId = collaboratorList[_i];
      if (collaboratorId === "null") {
        continue;
      }
      imageList.push(this.fetchImage(collaboratorId));
    }
    return imageList;
  };

  BirthdayArrange.prototype.fetchImage = function(id) {
    var url;
    url = "/img/collabo-photo/" + id + ".png";
    return url;
  };

  BirthdayArrange.prototype.makeUrl = function() {
    var planId,
      _this = this;
    planId = "";
    $.ajax({
      url: "/get_plan",
      type: "GET",
      async: false,
      dataType: "json",
      success: function(res) {
        return planId = res.Plan.id;
      }
    });
    return "/plan/" + planId + "/photo";
  };

  return BirthdayArrange;

})(CanvasImages);
