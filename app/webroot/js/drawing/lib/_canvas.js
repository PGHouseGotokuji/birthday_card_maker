// Generated by CoffeeScript 1.3.3
var _Canvas;

_Canvas = (function() {
  'this class canvas javascript\n\nwith use drawing class\n(modify schedule as soon as)';

  function _Canvas(id, flag) {
    this.id = id != null ? id : "canvas";
    if (flag == null) {
      flag = false;
    }
    'if flag is true -> new canvas (add container)';

    if (flag) {
      $("#" + id).css({
        "position": "absolute",
        "top": 50,
        "left": 50
      });
    }
    this.canvas = $("#" + this.id).get(0);
    this.canvas.height = 500;
    this.canvas.width = 500;
    this.ctx = this.canvas.getContext('2d');
    this.data = {};
    this.setSize("1");
    this.setColor("black");
  }

  _Canvas.prototype.setCssAbsolute = function() {
    return $("#" + this.id).css({
      top: 100,
      left: 100
    });
  };

  _Canvas.prototype.clear = function() {
    return this.ctx.clearRect(0, 0, 10000, 10000);
  };

  _Canvas.prototype.setWidth = function() {
    if ($(window).width() >= 980) {
      return this.canvas.width = 980;
    } else {
      return this.canvas.width = $(window).width();
    }
  };

  _Canvas.prototype.drawCircle = function() {
    this.ctx.beginPath();
    this.ctx.arc(coords.x, coords.y, this.data.size, 0, Math.PI * 2.0, true);
    this.ctx.stroke();
    return this.ctx.closePath();
  };

  _Canvas.prototype.setColor = function(color) {
    this.data.color = color;
    this.ctx.fillStyle = this.data.color;
    return this.ctx.strokeStyle = this.data.color;
  };

  _Canvas.prototype.setSize = function(size) {
    this.data.size = size;
    return this.ctx.lineWidth = this.data.size;
  };

  _Canvas.prototype.fillCircle = function(coords) {
    this.ctx.beginPath();
    this.ctx.arc(coords.x, coords.y, this.data.size, 0, Math.PI * 2.0, true);
    this.ctx.fill();
    return this.ctx.closePath();
  };

  _Canvas.prototype.fillLine = function(coords1, coords2) {
    if (coords2 == null) {
      coords2 = null;
    }
    this.ctx.beginPath();
    if (!coords2) {
      if (this.data.preCoords) {
        coords2 = this.data.preCoords;
      } else {
        coords2 = coords1;
      }
    }
    this.ctx.moveTo(coords1.x, coords1.y);
    this.ctx.lineTo(coords2.x, coords2.y);
    this.ctx.stroke();
    this.ctx.closePath();
    return this.data.preCoords = coords1;
  };

  _Canvas.prototype.clearPreCoords = function() {
    return delete this.data.preCoords;
  };

  _Canvas.prototype.save = function() {
    var data, type;
    type = "image/png";
    data = this.canvas.toDataURL(type);
    data = data.replace('data:image/png;base64,', '');
    return data;
  };

  _Canvas.prototype.lineRound = function() {
    this.ctx.lineJoin = "round";
    return this.ctx.lineCap = "round";
  };

  return _Canvas;

})();
